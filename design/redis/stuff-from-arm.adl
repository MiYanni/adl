/**
 * The Resource definition.
 */
model Resource<T> {
  /**
   * Resource ID.
   */
  id: [readonly] [optional] string;

  /**
   * Resource name.
   */
  name: [readonly] [optional] string;

  /**
   * Resource type.
   */
  type: [readonly] [optional] string;

  /**
   * Resource Properties
   */
  properties: T;
}


/**
 * The resource model definition for a ARM tracked top level resource
*/
model TrackedResource<T> extends Resource<T> {
  /**
   * Resource tags.
   */
  tags: [optional] Dictionary<string>;
  
  /**
   * The geo-location where the resource lives
   */
  location: string;
}


model ProxyResource<T> extends Resource<T> {

}

/** Pageable Results from an operation. */
model Pageable<T> {
   /**
     * Array of values in this page of the result set.
     */
    value: [optional] Array<T>;

    /**
     * Link for next page of results.
     */
    nextLink:  [readonly] [optional] string;
}


/**
 * REST API operation
 */
model Operation {
    /**
     * Operation name: {provider}/{resource}/{operation}
     */
    name: [optional] string;

    /**
     * The object that describes the operation.
     */
    display: [optional] {
        provider: [optional] string;
        operation: [optional] string;
        resource: [optional] string;
        description: [optional] string;
    };
}

annotation Arm.Operations() {
  // implies the operations interface for the service. 
    /**
     * Lists all of the available REST API operations of the provider.

     * @http GET /providers/Microsoft.Cache/operations
     * @tag Operations
     * @return 200 - Success. The response describes the list of operations.
     */
    // List(api_version: ApiVersionParameter, body: [optional]Body<file, "application/json">): Arm.PageableResponse<Operation>;
}

/** Anything not handled is a cloud error */
response Arm.DefaultResponse { 

}

/** Typical Arm Response, 200 returns T */
response Arm.Response<T> extends Arm.DefaultResponse {
  
}

/** Typical Pageable Arm Response */
response Arm.PageableResponse<T> extends Arm.DefaultResponse {
  
}

/** for a long running api, 200 response returns true, everything else is false */
response Arm.Ok<T> { 

}

/** for a long running api, 200 response returns true, everything else is false */
response Arm.LongRunningOk<T> { 

}